<?xml version="1.0" encoding="UTF-8"?>

<mule
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
	<sub-flow name="variables" doc:id="944c896e-dce1-42a4-b2fe-ec1b7fc21cca">
		<logger level="INFO" doc:name="Start log" doc:id="391c182f-a167-4b7a-bebb-9128acbca7bd" message='#["The application has been launched"]' />
		<set-variable value="#[message.attributes.queryParams.limit default 100]" doc:name="Set limit" doc:id="51e13b5a-cae2-4a85-aafc-8d5c5768a1ee" variableName="limit" />
		<set-variable value="#[message.attributes.queryParams.offset default -1]" doc:name="Set offset" doc:id="4f327e66-08db-4fd9-9176-f09cb7319d77" variableName="offset" />
		<set-variable value='#[message.attributes.queryParams.name default ""]' doc:name="Set agency name" doc:id="00fe79b6-a3c0-4751-a811-d4978a3cee41" variableName="name" />
		<choice doc:name="Choice" doc:id="f1553f30-ff0f-47af-b442-47b4d1f658cb">
			<when expression="#[vars.offset == -1]">
				<raise-error doc:name="MISS_OFFSET error" doc:id="583c964a-dd11-49bf-a42c-b9cbc3ab3c98" type="APP:MISS_OFFSET" description="You forgot to specify the 'offset' parameter" />
			</when>
			<when expression='#[vars.name == ""]'>
				<raise-error doc:name="MISS_NAME error" doc:id="1ccdaaed-7344-48a5-9b94-9e02c5b8f10a" type="APP:MISS_NAME" description="You forgot to specify the 'name' parameter" />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Default block logger" doc:id="cc059b05-36d1-479b-96d0-d17d03080deb" message='#["Default block execution"]' />
			</otherwise>
		</choice>
		<set-variable value='#[message.attributes.queryParams.mode default "list"]' doc:name="Set mode" doc:id="9007427b-1199-4d46-9bfd-0776a864feda" variableName="mode" />
		<validation:matches-regex doc:name="Check for mode validity" doc:id="b5831dff-3919-4259-80bc-62121c0af587" config-ref="Validation_Config" value="#[vars.mode]" regex="${validation.mode.regex}" message="${validation.mode.message}">
			<error-mapping sourceType="VALIDATION:MISMATCH" targetType="APP:INVALID_MODE" />
		</validation:matches-regex>
	</sub-flow>
	<sub-flow name="getRockets"
		doc:id="914ffeb8-e7b5-4944-8f20-c86bfabd505b">
		<http:request method="GET" doc:name="getRockets"
			doc:id="9d5934e9-c4b8-4d25-9588-2e12dd167033"
			config-ref="HTTP_Request_configuration_Rockets" path="launcher">
			<http:query-params><![CDATA[#[output application/java
---
{
	"offset" : vars.offset,
	"limit" : vars.limit
}]]]></http:query-params>
		</http:request>
		<ee:transform doc:name="Basic data filtering"
			doc:id="b622ad06-bf02-43f4-aead-b5189ed3e81c">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload.results filter ((item, index) -> item.manufacturer.name == vars.name) map ( result , indexOfResult ) -> {
	name: result.name,
	manufacturer: {
		name: result.manufacturer.name default "",
		"type": result.manufacturer."type" default "",
		country_code: result.manufacturer.country_code default "",
		description: result.manufacturer.description default "",
		founding_year: result.manufacturer.founding_year default "",
		image_url: result.manufacturer.image_url default ""
	},
	program: result.program map ( program , indexOfProgram ) -> {
		name: program.name,
		description: program.description default "",
		agencies: program.agencies.name default "",
		image_url: program.image_url default "",
		start_date: program.start_date default "",
		end_date: program.end_date default "",
		wiki_url: program.wiki_url default ""
	},
	family: result.family default "",
	full_name: result.full_name default "",
	variant: result.variant default "",
	reusable: result.reusable,
	image_url: result.image_url default "",
	wiki_url: result.wiki_url default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="getStations"
		doc:id="b42af5cc-cf60-4c11-a8d8-747d58ba7b54">
		<http:request method="GET" doc:name="getStations"
			doc:id="c66dd9e8-1c9f-45c9-a86e-500b387bea61"
			config-ref="HTTP_Request_configuration_Stations" path="station"
			responseTimeout="60000" />
		<ee:transform doc:name="Basic data filtering"
			doc:id="0744ac6c-cc23-4479-88b0-247806b1ff68">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload filter ((item, index) -> item.owners contains(vars.name))]]></ee:set-payload>
			</ee:message>
			<ee:variables>
			</ee:variables>
		</ee:transform>
	</sub-flow>
	<sub-flow name="getLaunchesAndPlanets"
		doc:id="2eafa69c-7893-4f17-af7e-e2614ae1264d">
		<http:request method="GET" doc:name="getLaunches"
			doc:id="33edb96d-bfdb-4eab-9f50-609278864808"
			config-ref="HTTP_Request_configuration_Launches"
			path='#["launchesByStatusAndYear?limit=" ++ vars.limit ++ "&amp;offset=" ++ vars.offset]'
			responseTimeout="60000" />
		<ee:transform doc:name="Basic data filtering"
			doc:id="e98ff262-b8ce-4f83-8723-3ac6e1e40b50">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="launchInfo"><![CDATA[%dw 2.0
output application/json
---
payload.launches filter ((item, index) -> item.launch_service_provider == vars.name) map ( launch , indexOfLaunch ) -> {
	name: launch.name default "",
	status: launch.status default "",
	launch_year: launch.launch_year default "",
	failreason: launch.failreason default "",
	rocket: {
		name: launch.rocket.name default "",
		family: launch.rocket.family default "",
		full_name: launch.rocket.full_name default "",
		variant: launch.rocket.variant default ""
	},
	mission: {
		name: launch.mission.name default "",
		description: launch.mission.description default "",
		"type": launch.mission."type" default "",
		orbit: launch.mission.orbit default "",
		planet_of_interest: ""
	},
	pad: {
		name: launch.pad.name default "",
		location: {
			name: launch.pad.location.name default "",
			country_code: launch.pad.location.country_code default "",
			total_launch_count: launch.pad.location.total_launch_count default "",
			total_landing_count: launch.pad.location.total_landing_count default ""
		}
	}
}]]></ee:set-variable>
				<ee:set-variable variableName="launch_planet_arr"><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<foreach doc:name="For Each"
			doc:id="a2eb3e74-bea9-4626-9152-6842a4b0f1b8"
			collection="#[vars.launchInfo]">
			<set-variable value="#[payload]"
				doc:name="Set oneLaunch"
				doc:id="96d1c54e-3caa-43b8-9b9c-95bc81175bf7"
				variableName="oneLaunch" />
			<set-variable doc:name="Set planetName"
				doc:id="5242e890-7c2e-4794-aca0-f76641b808ea"
				variableName="planetName"
				value="#[java!org::spaceagencies::utils::MyUtils::getPlanetName(vars.oneLaunch.mission.description)]" />
			<choice doc:name="Choice"
				doc:id="145eec21-9d4e-4da9-b741-61f43d5949be">
				<when expression='#[vars.planetName != ""]'>
					<http:request method="GET" doc:name="getPlanet"
						doc:id="f90465f9-31db-49bb-99c7-17a429dc13c9"
						config-ref="HTTP_Request_configuration_Planets"
						path='#["planets?name=" ++ vars.planetName]'
						responseTimeout="60000" />
					<ee:transform doc:name="Planet info"
						doc:id="c20c49c7-d509-490e-a55e-5eb891dcf463">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	name: payload[0].name,
	moons: payload[0].moons.moon default [],
	semimajorAxis: payload[0].semimajorAxis,
	perihelion: payload[0].perihelion,
	aphelion: payload[0].aphelion,
	eccentricity: payload[0].eccentricity,
	inclination: payload[0].inclination,
	mass: payload[0].mass.massValue,
	density: payload[0].density,
	gravity: payload[0].gravity,
	meanRadius: payload[0].meanRadius,
	polarRadius: payload[0].polarRadius,
	discoveredBy: payload[0].discoveredBy,
	discoveryDate: payload[0].discoveryDate,
	alternativeName: payload[0].alternativeName,
	axialTilt: payload[0].axialTilt,
	avgTemp: payload[0].avgTemp
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<ee:transform doc:name="One launch with planet info"
						doc:id="9319699e-3513-441a-8a75-5730d898e78a">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	name: vars.oneLaunch.name default "",
	status: vars.oneLaunch.status default "",
	launch_year: vars.oneLaunch.launch_date default "",
	failreason: vars.oneLaunch.failreason default "",
	rocket: {
		name: vars.oneLaunch.rocket.name default "",
		family: vars.oneLaunch.rocket.family default "",
		full_name: vars.oneLaunch.rocket.full_name default "",
		variant: vars.oneLaunch.rocket.variant default ""
	},
	mission: {
		name: vars.oneLaunch.mission.name default "",
		description: vars.oneLaunch.mission.description default "",
		"type": vars.oneLaunch.mission."type" default "",
		orbit: vars.oneLaunch.mission.orbit default "",
		planet_of_interest: payload
	},
	pad: {
		name: vars.oneLaunch.pad.name default "",
		location: {
			name: vars.oneLaunch.pad.location.name default "",
			country_code: vars.oneLaunch.pad.location.country_code default "",
			total_launch_count: vars.oneLaunch.pad.location.total_launch_count default "",
			total_landing_count: vars.oneLaunch.pad.location.total_landing_count default ""
		}
	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<ee:transform
						doc:name="Adding payload to launch_planet_arr"
						doc:id="d4fc3172-6da2-491d-af73-016e4dcfb9ed">
						<ee:message />
						<ee:variables>
							<ee:set-variable variableName="launch_planet_arr"><![CDATA[%dw 2.0
output application/json
---
vars.launch_planet_arr + payload]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
				</when>
				<otherwise>
					<ee:transform
						doc:name="Adding oneLaunch to launch_planet_arr"
						doc:id="e19dcb1b-ab8a-47d3-b30c-7e017d5b22c6">
						<ee:message />
						<ee:variables>
							<ee:set-variable variableName="launch_planet_arr"><![CDATA[%dw 2.0
output application/json
---
vars.launch_planet_arr + vars.oneLaunch]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
				</otherwise>
			</choice>
		</foreach>
		<ee:transform doc:name="Final launch_planet_arr"
			doc:id="61dc42ea-6c72-4170-a105-e56c6b71f7ca">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.launch_planet_arr]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="agencyWithStationAndLaunches"
		doc:id="6c9f186d-7f41-4d50-bc6c-38d4417189c0">
		<flow-ref doc:name="variables"
			doc:id="fc442cc5-ffb5-4607-8f6a-e0de95c4da68" name="variables" />
		<scatter-gather doc:name="Scatter-Gather"
			doc:id="5f3c3e3b-3331-4e2b-8c6c-856a7cb06ee4">
			<route>
				<flow-ref doc:name="getLaunchesAndPlanets"
					doc:id="42242f03-0978-422b-b0d7-7764fe58ea1f"
					name="getLaunchesAndPlanets" />
			</route>
			<route>
				<flow-ref doc:name="getStations"
					doc:id="6f9bf2c0-80bf-409f-b1b3-621f430cefb4" name="getStations" />
			</route>
			<route>
				<flow-ref doc:name="getRockets"
					doc:id="72529153-02b0-4344-bcaa-bc530594f8eb" name="getRockets" />
			</route>
		</scatter-gather>
		<choice doc:name="Choice" doc:id="2eb7cd03-23d3-4ec8-8e71-082e2ee11f4b" >
			<when expression='#[payload."1".payload == [] and payload."0".payload == [] and payload."2".payload == []]'>
				<raise-error doc:name="ALL_EMPTY error" doc:id="1a6b691f-ae28-433f-9897-43b5540e36cc" type="APP:ALL_EMPTY" description="${error_messaging.all_empty}"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="a0946e50-b1b3-4631-bec3-f6d01d08f955" message='#["Default block execution"]'/>
			</otherwise>
		</choice>
		<ee:transform doc:name="Final detailed representation"
			doc:id="1f947523-f746-44c6-afb8-96e137eeb4f2">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
[{
  agency: vars.name,
  stations: if (sizeOf(payload."1".payload) == 0) 
	"There are no records on this page about space stations owned by the " ++ vars.name ++ "."
  else {
    stations_count: sizeOf(payload."1".payload),
	stations_list: payload."1".payload
  },
  launches: if (sizeOf(payload."0".payload) == 0) 
    "There are no records of space launches made by the " ++ vars.name ++ " on this page."
  else {
    launches_count: sizeOf(payload."0".payload),
    launches_list: payload."0".payload
  },
  rockets: if (sizeOf(payload."2".payload) == 0) 
    "There are no records on this page about rockets manufactured by the " ++ vars.name ++ "."
  else {
    rockets_count: sizeOf(payload."2".payload),
	rockets_list: payload."2".payload
  }
}]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Agency info modes"
			doc:id="785c1af3-b842-48e0-883c-0236e4033030">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="normal_mode"><![CDATA[%dw 2.0
output application/json
---
payload map ( generalInfo , index ) -> {
	agency: generalInfo.agency,
	stations: if (generalInfo.stations is String)
      generalInfo.stations
    else {
		stations_count: generalInfo.stations.stations_count,
		stations_list: generalInfo.stations.stations_list map ( stationslist , indexOfStationslist ) -> {
			name: stationslist.name,
			status_name: stationslist.status_name,
			founded: stationslist.founded,
			deorbited: stationslist.deorbited,
			description: stationslist.description,
			orbit: stationslist.orbit,
			owners: stationslist.owners map ( owner , indexOfOwner ) -> owner,
			image_url: stationslist.image_url
		}
	},
	launches: if (generalInfo.launches is String)
      generalInfo.launches
    else {
		launches_count: generalInfo.launches.launches_count,
		launches_list: generalInfo.launches.launches_list map ( launcheslist , indexOfLauncheslist ) -> {
			name: launcheslist.name,
			status: launcheslist.status,
			launch_year: launcheslist.launch_year,
			rocket_name: launcheslist.rocket.name,
			mission: {
				name: launcheslist.mission.name,
				description: launcheslist.mission.description,
				planet_of_interest: if (launcheslist.mission.planet_of_interest == "")
				        ""
				    else {
					name: launcheslist.mission.planet_of_interest.name,
					moons: launcheslist.mission.planet_of_interest.moons map ( moon , indexOfMoon ) -> moon,
					semimajorAxis: launcheslist.mission.planet_of_interest.semimajorAxis,
					perihelion: launcheslist.mission.planet_of_interest.perihelion,
					aphelion: launcheslist.mission.planet_of_interest.aphelion,
					mass: launcheslist.mission.planet_of_interest.mass,
					gravity: launcheslist.mission.planet_of_interest.gravity,
					meanRadius: launcheslist.mission.planet_of_interest.meanRadius,
					discoveredBy: launcheslist.mission.planet_of_interest.discoveredBy,
					discoveryDate: launcheslist.mission.planet_of_interest.discoveryDate,
					axialTilt: launcheslist.mission.planet_of_interest.axialTilt,
					avgTemp: launcheslist.mission.planet_of_interest.avgTemp
				}
			},
			pad: {
				name: launcheslist.pad.name,
				location: launcheslist.pad.location.name
			}
		}
	},
	rockets: if (generalInfo.rockets is String)
      generalInfo.rockets
    else {
		rockets_count: generalInfo.rockets.rockets_count,
		rockets_list: generalInfo.rockets.rockets_list map ( rocketslist , indexOfRocketslist ) -> {
			name: rocketslist.name,
			program: rocketslist.program.name,
			family: rocketslist.family,
			reusable: rocketslist.reusable,
			image_url: rocketslist.image_url,
			wiki_url: rocketslist.wiki_url
		}
	}
}]]></ee:set-variable>
				<ee:set-variable variableName="list_mode"><![CDATA[output application/json
---
payload map ( generalInfo , index ) -> {
	agency: generalInfo.agency,
	stations: if (generalInfo.stations is String)
	  generalInfo.stations
	else {
		stations_count: generalInfo.stations.stations_count,
		stations_list: generalInfo.stations.stations_list.name
	},
	launches: if (generalInfo.launches is String)
	  generalInfo.launches
	else {
		launches_count: generalInfo.launches.launches_count,
		launches_list: generalInfo.launches.launches_list.name
	},
	rockets: if (generalInfo.rockets is String)
	  generalInfo.rockets
	else {
		rockets_count: generalInfo.rockets.rockets_count,
		rockets_list: generalInfo.rockets.rockets_list.name
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Mode choice"
			doc:id="8ce6474a-003f-4d97-a67d-204ab837ef55">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
if (vars.mode == "normal")
    vars.normal_mode
else if (vars.mode == "list")
    vars.list_mode
else
    payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="setToFile" doc:id="24df5f2a-05d5-4fd6-864a-b4939fc4f95f" name="setToFile"/>
	</sub-flow>
	<sub-flow name="launchesAndStationsByAgencyAndYear"
		doc:id="c373dc04-0fb0-499a-bbff-bc6ebea1763f">
		<flow-ref doc:name="variables"
			doc:id="3450ab5a-6b4c-4846-8759-68318ef4b74f" name="variables" />
		<set-variable value="#[message.attributes.queryParams.year]" doc:name="Set year" doc:id="0677cae9-079f-4b4c-9b2d-8384a25d0a70" variableName="year" />
		<validation:matches-regex doc:name="Check for year validity" doc:id="3d594f44-10de-4bfc-b16f-892e1e2e4ae9" config-ref="Validation_Config" value="#[vars.year]" regex="${validation.year.regex}" message="${validation.year.message}">
			<error-mapping sourceType="VALIDATION:MISMATCH" targetType="APP:INVALID_YEAR" />
		</validation:matches-regex>
		<scatter-gather doc:name="Scatter-Gather"
			doc:id="867d81b6-5b92-42de-8527-6b41a1e83696">
			<route>
				<flow-ref doc:name="getLaunchesAndPlanets"
					doc:id="0e30aa53-85f6-49ee-b65f-b2ec61ed2724"
					name="getLaunchesAndPlanets" />
				<ee:transform doc:name="Filtering by year"
					doc:id="e0232cbd-dc63-450e-8d60-84bd99084a9c">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload filter ((item, index) -> item.launch_year == vars.year)]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</route>
			<route>
				<http:request method="GET" doc:name="getStations"
					doc:id="b69b611f-abf3-4c8b-8ed3-7c89086e369c"
					config-ref="HTTP_Request_configuration_Stations" path="station"
					responseTimeout="60000" />
				<ee:transform
					doc:name="Filtering by agency name and activity years"
					doc:id="4d908a1c-37fb-480d-865e-51029f405076">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload filter ((item, index) -> (item.owners contains(vars.name)) and (item.founded[0 to 3] as Number <= vars.year as Number) and ((item.deorbited == null) or (item.deorbited[0 to 3] as Number > vars.year as Number))) map ( payload01 , indexOfPayload01 ) -> {
  name: payload01.name,
  status: payload01.status_name,
  "type": payload01."type",
  founded: payload01.founded,
  deorbited: payload01.deorbited as String default "",
  description: payload01.description,
  orbit: payload01.orbit,
  owners: payload01.owners map ( owner , indexOfOwner ) -> owner,
  image_url: payload01.image_url
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</route>
			<route>
				<http:request method="GET" doc:name="Request"
					doc:id="15455fb9-0856-4616-974d-81ff09417134"
					config-ref="HTTP_Request_configuration_Planets"
					path='#["discovery?year=" ++ vars.year]' />
			</route>
		</scatter-gather>
		<choice doc:name="Choice" doc:id="12e6ee87-6211-4ad2-8e61-d53e13e475cc">
			<when expression='#[payload."0".payload == [] and payload."1".payload == []]'>
				<raise-error doc:name="ALL_EMPTY error" doc:id="decc200a-a371-43a9-bb1c-782c5a953a95" type="APP:ALL_EMPTY" description="${error_messaging.all_empty}" />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Default block logger" doc:id="cfb2493b-2246-4ac2-85c8-75a112d007c4" message='#["Default block execution"]' />
			</otherwise>
		</choice>
		<ee:transform doc:name="Final representation" doc:id="833a30cf-2319-42ee-8f20-5d7c0b1265a2">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
[{
  agency: vars.name,
  launches: if (sizeOf(payload."0".payload) == 0) 
    "In specified year, the " ++ vars.name ++ " did not carry out space launches."
  else {
    launches_count: sizeOf(payload."0".payload),
    launches_list: payload."0".payload
  },
  stations: if (sizeOf(payload."1".payload) == 0)
    "In specified year, the " ++ vars.name ++ " did not have active space stations."
  else {
    stations_count: sizeOf(payload."1".payload),
    stations_list: payload."1".payload
  },
  discovered_objects: if (sizeOf(payload."2".payload) == 0)
    "No new solar system objects were discovered in specified year."
  else {
    objects_count: sizeOf(payload."2".payload),
    objects_list: payload."2".payload
  }
}]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="setToFile"
		doc:id="ee6a7413-131b-47ab-8cbc-b238a96e4a87">
		<choice doc:name="Choice"
			doc:id="b34540e7-89e2-4009-b711-1061da8a8c18">
			<when expression='#[vars.mode == "detailed"]'>
				<set-variable
					value='#[Mule::p("records.folder") ++ vars.name as String ++ "-" ++&#10;&#10;now() as String {format: "yyyy-MM-dd"} ++ "-" ++&#10;&#10;now() as String {format: "hh-m-s"} ++ ".json"]'
					doc:name="Set file_name"
					doc:id="f294327c-8062-4833-951d-aaa9b8710940"
					variableName="file_name" />
				<file:write doc:name="Write"
					doc:id="7ea4de48-437f-4f4b-a7cf-7a7141fe32b5"
					config-ref="File_Config" path="#[vars.file_name]" mode="CREATE_NEW">
				</file:write>
			
</when>
		</choice>
	</sub-flow>
</mule>
